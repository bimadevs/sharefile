// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  files     File[]
  downloads DownloadStats[]
}

model File {
  id           String   @id @default(uuid())
  name         String
  originalName String
  mimeType     String
  size         Int
  path         String
  key          String   @unique // URL-friendly identifier for download links
  isPublic     Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userId       String?
  user         User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  downloads    DownloadStats[]

  @@index([userId])
  @@index([key])
}

model DownloadStats {
  id           String   @id @default(uuid())
  fileId       String
  userId       String?
  ipAddress    String?
  downloadedAt DateTime @default(now())
  completed    Boolean  @default(false)
  speed        Int?     // Average download speed in bytes per second
  file         File     @relation(fields: [fileId], references: [id], onDelete: Cascade)
  user         User?    @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@index([fileId])
  @@index([userId])
}
